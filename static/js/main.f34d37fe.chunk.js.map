{"version":3,"sources":["components/Searchbar/Searchbar.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/Preview/Preview.module.css","components/ImageGallery/ImageGallery.module.css","components/ButtonLoadMore/ButtonLoadMore.module.css","components/Spiner/Spiner.module.css","components/Searchbar/Searchbar.js","services/pixabayAPI.js","components/Preview/Preview.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","components/LargeImage/LargeImage.js","components/ButtonLoadMore/ButtonLoadMore.js","components/Spiner/Spiner.js","components/ImageFinder/ImageFinder.js","App.js","index.js"],"names":["module","exports","Searchbar","state","inputQuery","handleInputQuery","e","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","toast","error","className","s","SearchForm","this","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","Component","query","page","a","fetch","response","ok","json","images","hits","Promise","reject","Error","fetchPixabayAPI","Preview","ImageGalleryItem","id","url","onClick","ImageGalleryItemImage","src","alt","protoType","PropTypes","string","func","ImageGallery","map","webformatURL","arrayOf","objectOf","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackDropClick","target","window","addEventListener","removeEventListener","createPortal","overlay","modal","children","LargeImage","ButtonLoadMore","onLoadMore","Button","Spiner","color","height","width","timeout","ImageFinder","status","onFetch","showModal","largeImgURL","prev","renderMoreImages","renderImages","currentQuery","currentPage","togleOnFetch","length","setLargeImgURL","callback","find","image","Number","largeImageURL","togleModal","prevProps","prevState","prevQuery","message","App","handleFormSubmit","autoClose","position","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f34d37fe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__2vYEt\",\"SearchForm\":\"Searchbar_SearchForm__vlWvG\",\"SearchFormButton\":\"Searchbar_SearchFormButton__63myd\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__SRqXs\",\"SearchFormInput\":\"Searchbar_SearchFormInput__nVYsN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__2XXks\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__2ZHFn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay___6tAF\",\"modal\":\"Modal_modal__3ODes\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Preview\":\"Preview_Preview__2dxhD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__2zQUu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"ButtonLoadMore_Button__2t9ug\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spiner\":\"Spiner_Spiner__10i9p\"};","import { Component } from 'react';\nimport { toast } from 'react-toastify';\n\nimport s from './Searchbar.module.css';\n\nclass Searchbar extends Component {\n  state = {\n    inputQuery: '',\n  };\n\n  handleInputQuery = e => {\n    this.setState({\n      inputQuery: e.currentTarget.value.toLowerCase(),\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    if (this.state.inputQuery.trim() === '') {\n      toast.error('Input query to find image...');\n      return;\n    }\n\n    this.props.onSubmit(this.state.inputQuery);\n    this.setState({ inputQuery: '' });\n  };\n\n  render() {\n    return (\n      <header className={s.Searchbar}>\n        <form className={s.SearchForm} onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className={s.SearchFormButton}>\n            <span className={s.SearchFormButtonLabel}>Search</span>\n          </button>\n\n          <input\n            className={s.SearchFormInput}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={this.state.inputQuery}\n            onChange={this.handleInputQuery}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Searchbar;\n","async function fetchPixabayAPI(query, page) {\n  const response = await fetch(\n    `https://pixabay.com/api/?key=23604393-9751c4fdb7943747aa1d7afad&q=${query}&page=${page}&image_type=photo&orientation=horizontal&per_page=12`,\n  );\n  if (response.ok) {\n    const images = await response.json();\n    return images.hits;\n  }\n  return await Promise.reject(\n    new Error(`No image with query \"${query}\" found.`),\n  );\n}\n\nexport default fetchPixabayAPI;\n","import s from './Preview.module.css';\n\nfunction Preview() {\n  return <div className={s.Preview}>Enter search query </div>;\n}\n\nexport default Preview;\n","import PropTypes from 'prop-types';\n\nimport s from './ImageGalleryItem.module.css';\n\nfunction ImageGalleryItem({ id, url, onClick }) {\n  return (\n    <li className={s.ImageGalleryItem}>\n      <img\n        className={s.ImageGalleryItemImage}\n        src={url}\n        alt=\"Result of your query\"\n        id={id}\n        onClick={onClick}\n      />\n    </li>\n  );\n}\n\nImageGalleryItem.protoType = {\n  id: PropTypes.string,\n  url: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\n\nimport ImageGalleryItem from '../ImageGalleryItem';\n\nimport s from './ImageGallery.module.css';\n\nfunction ImageGallery({ images, onClick }) {\n  return (\n    <ul className={s.ImageGallery}>\n      {images.map(({ id, webformatURL }) => {\n        return (\n          <ImageGalleryItem\n            key={id}\n            id={id}\n            url={webformatURL}\n            onClick={onClick}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nImageGallery.protoType = {\n  images: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)),\n  onClick: PropTypes.func,\n};\n\nexport default ImageGallery;\n","import { Component } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleBackDropClick = e => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className={s.overlay} onClick={this.handleBackDropClick}>\n        <div className={s.modal}>{this.props.children}</div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nexport default Modal;\n","import PropTypes from 'prop-types';\n\nfunction LargeImage({ url }) {\n  return <img src={url} alt=\"Large sample\" />;\n}\n\nLargeImage.protoType = {\n  url: PropTypes.string,\n};\n\nexport default LargeImage;\n","import PropTypes from 'prop-types';\n\nimport s from './ButtonLoadMore.module.css';\n\nfunction ButtonLoadMore({ onLoadMore }) {\n  return (\n    <button className={s.Button} type=\"button\" onClick={onLoadMore}>\n      Load more\n    </button>\n  );\n}\n\nButtonLoadMore.protoType = {\n  onLoadMore: PropTypes.func,\n};\n\nexport default ButtonLoadMore;\n","import Loader from 'react-loader-spinner';\n\nimport s from './Spiner.module.css';\n\nfunction Spiner() {\n  return (\n    <div className={s.Spiner}>\n      <Loader\n        type=\"Puff\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n        timeout={3000} //3 secs\n      />\n    </div>\n  );\n}\n\nexport default Spiner;\n","import { Component } from 'react';\n\nimport fetchPixabayAPI from '../../services/pixabayAPI';\n\nimport Preview from '../Preview';\nimport ImageGallery from '../ImageGallery';\nimport Modal from '../Modal';\nimport LargeImage from '../LargeImage';\nimport ButtonLoadMore from '../ButtonLoadMore';\nimport Spiner from '../Spiner';\n\nclass ImageFinder extends Component {\n  state = {\n    images: null,\n    page: 1,\n    error: null,\n    status: 'idle',\n    onFetch: false,\n    showModal: false,\n    largeImgURL: '',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevProps.query;\n    const currentQuery = this.props.query;\n    const currentPage = this.props.page;\n\n    if (prevQuery !== currentQuery) {\n      this.setState({ page: 1 });\n      this.renderImages(currentQuery, currentPage);\n    }\n  }\n\n  onLoadMore = () => {\n    this.setState(\n      prev => ({\n        page: prev.page + 1,\n      }),\n      async () => {\n        await this.renderMoreImages();\n      },\n    );\n  };\n\n  renderImages = async (currentQuery, currentPage) => {\n    try {\n      this.togleOnFetch();\n      const images = await fetchPixabayAPI(currentQuery, currentPage);\n      this.togleOnFetch();\n      if (images.length === 0) {\n        const error = new Error('No images for this query');\n        this.setState({ error, status: 'rejected' });\n      } else {\n        this.setState({ images, status: 'resolved' });\n      }\n    } catch (error) {\n      this.setState({ error, status: 'rejected' });\n    }\n  };\n\n  renderMoreImages = async () => {\n    try {\n      this.togleOnFetch();\n      const images = await fetchPixabayAPI(this.props.query, this.state.page);\n      this.togleOnFetch();\n      if (images.length === 0) {\n        const error = new Error('No more images for this query');\n        this.setState({ error, status: 'rejected' });\n      } else {\n        this.setState(prev => ({\n          images: [...prev.images, ...images],\n        }));\n      }\n    } catch (error) {\n      this.setState({ error, status: 'rejected' });\n    }\n  };\n\n  setLargeImgURL = (e, callback) => {\n    this.setState(\n      {\n        largeImgURL: this.state.images.find(\n          image => image.id === Number(e.target.id),\n        ).largeImageURL,\n      },\n      callback,\n    );\n  };\n\n  togleOnFetch = () => {\n    this.setState(prev => ({\n      onFetch: !prev.onFetch,\n    }));\n  };\n\n  togleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  render() {\n    const { status, images, showModal, onFetch, largeImgURL } = this.state;\n\n    if (status === 'idle') {\n      return <Preview />;\n    }\n\n    if (status === 'rejected') {\n      return <div>{this.state.error.message}</div>;\n    }\n\n    if (status === 'resolved') {\n      return (\n        <>\n          <ImageGallery\n            images={images}\n            onClick={e => {\n              this.setLargeImgURL(e, this.togleModal);\n            }}\n          />\n\n          {showModal && (\n            <Modal onClose={this.togleModal}>\n              <LargeImage url={largeImgURL} />\n            </Modal>\n          )}\n\n          {onFetch && <Spiner />}\n\n          <ButtonLoadMore onLoadMore={this.onLoadMore} />\n        </>\n      );\n    }\n  }\n}\n\nexport default ImageFinder;\n","import { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\n\nimport Searchbar from './components/Searchbar';\nimport ImageFinder from './components/ImageFinder';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    query: '',\n  };\n\n  handleFormSubmit = query => {\n    this.setState({ query });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.handleFormSubmit} />\n        <ImageFinder query={this.state.query} />\n        <ToastContainer autoClose={3000} position=\"top-center\" />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}